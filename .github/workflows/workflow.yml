name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build_backend:
    name: Build backend
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '20'
          cache: maven
  
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests
        working-directory: backend


  build_frontend:
    runs-on: ubuntu-latest
    needs: [build_backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
  
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
        
      - name: Build frontend
        run: npm run build --no-progress 2>&1 >/dev/null || true # Mutes ESlint warnings
        working-directory: frontend

  cypress:
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]
  
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: measdb
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd "pg_isready -U $${POSTGRES_USER}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
  
    steps:
      - uses: actions/checkout@v4
  
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '20'
          cache: maven
  
      - name: Make Maven Wrapper executable
        run: chmod +x mvnw
        working-directory: backend
  
      - name: Build backend (package, no tests)
        working-directory: backend
        run: ./mvnw -B clean package -DskipTests
  
      - name: Start backend (background) + logs
        working-directory: backend
        env:
          QUARKUS_DATASOURCE_REACTIVE_URL: vertx-reactive:postgresql://localhost:5432/measdb
          QUARKUS_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
          QUARKUS_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: drop-and-create
          QUARKUS_HTTP_PORT: '8280'
        run: |
          nohup java -jar target/quarkus-app/quarkus-run.jar > ../backend.log 2>&1 &
          echo $! > ../backend.pid
          sleep 2
  
      - name: Wait for Quarkus (8280) â€“ real endpoint
        run: |
          echo "Waiting for Quarkus http://localhost:8280/api/v1/hello ..."
          for i in {1..60}; do
            if curl -fsS http://localhost:8280/api/v1/hello >/dev/null; then
              echo "Backend is up."
              exit 0
            fi
            sleep 2
          done
          echo "Backend did not start in time. Last 200 log lines:"
          tail -n 200 backend.log || true
          exit 1
  
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
  
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci
  
      - name: Start frontend (background)
        working-directory: frontend
        run: |
          nohup npm run start > ../frontend.log 2>&1 &
          echo $! > ../frontend.pid
          sleep 2
  
      - name: Wait for React (3000)
        run: |
          echo "Waiting for React http://localhost:3000 ..."
          for i in {1..60}; do
            if curl -sS -I http://localhost:3000 >/dev/null; then
              echo "Frontend is up."
              exit 0
            fi
            sleep 2
          done
          echo "Frontend did not start in time. Last 200 log lines:"
          tail -n 200 frontend.log || true
          exit 1
  
      - name: Run Cypress tests
        working-directory: frontend
        run: npm run cypress:run
  
      - name: Teardown (dump last logs)
        if: always()
        run: |
          echo "--- Backend last 100 lines ---"
          tail -n 100 backend.log || true
          echo "--- Frontend last 100 lines ---"
          tail -n 100 frontend.log || true
          # optional kill:
          if [ -f backend.pid ]; then kill $(cat backend.pid) || true; fi
          if [ -f frontend.pid ]; then kill $(cat frontend.pid) || true; fi
