name: reviewdog-checkstyle
on: pull_request

permissions:
  contents: read
  pull-requests: write

jobs:
  checkstyle-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dbelyaev/action-checkstyle@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workdir: backend
          reporter: github-pr-review        # ← inline review komentarji
          filter_mode: added                # ← samo dodane vrstice v PR-ju
          fail_level: none                  # ← ne failaj joba zaradi kršitev

  eslint-frontend:
    name: ESLint (frontend)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - run: npm ci

      # ESLint + reviewdog → inline PR komentarji samo za dodane vrstice
      - name: ESLint via reviewdog
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workdir: frontend
          reporter: github-pr-review
          filter_mode: added
          fail_on_error: 'false'
          eslint_flags: '--ext .js,.jsx,.ts,.tsx .'
          
  jacoco-backend:
      name: JaCoCo (backend) → PR comment
      runs-on: ubuntu-latest
  
      steps:
        - uses: actions/checkout@v4
  
        - name: Setup Java
          uses: actions/setup-java@v4
          with:
            distribution: temurin
            java-version: '17'
  
        - name: Cache Maven
          uses: actions/cache@v4
          with:
            path: ~/.m2/repository
            key: m2-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
            restore-keys: m2-${{ runner.os }}-
  
        # Za Maven: to ustvari XML na backend/target/site/jacoco/jacoco.xml
        - name: Run tests + JaCoCo report (XML)
          run: mvn -f backend/pom.xml -B test jacoco:report
  
        # (neobvezno) preveri, da XML res obstaja
        - name: Show report path (debug)
          run: ls -la backend/target/site/jacoco
  
        # Komentar z madrapps/jacoco-report
        - name: Add JaCoCo coverage to PR
          uses: madrapps/jacoco-report@v1.7.2
          with:
            paths: ${{ github.workspace }}/backend/target/site/jacoco/jacoco.xml
            token: ${{ secrets.GITHUB_TOKEN }}
            # pragovi – prilagodi po želji
            min-coverage-overall: 60
            min-coverage-changed-files: 60
            # lepo je, da posodablja isti komentar:
            title: 'Code Coverage'
            update-comment: true
            comment-type: pr_comment
